#!/usr/bin/env bash

# To implement this command, edit the "Command implementation" section below. 

# Usage
# -----

# Comments prefixed with `#/` are managed by stubbs.
# The `command` and `usage` comments describe the command
# and show its options.
# 
#/ command: bootstrap:base-directories: "Create baseline directories"
#/ usage: rerun bootstrap:base-directories [options]

# Load common functions
# ---------------------

# Load the function library for this module.
# This loads rerun functions, too.
. $RERUN_MODULE_DIR/lib/functions.sh base-directories || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

# Error handling
# ---------------

# This script is designed to _fail-fast_.

# Trap errors and exit. The call to `rerun_die` will print the
# the error message and exit with the error command exit status. 

trap 'rerun_die $? "*** command failed: bootstrap:base-directories. ***"' ERR

# Run [set] `nounset` to treat unset variables as errors. Set [pipefail]
# so a pipeline return status is the value of the last 
# (rightmost) command to exit with non-zero status.
#
# [set]: http://ss64.com/bash/set.html
# [pipefail]: http://www.gnu.org/software/bash/manual/html_node/Pipelines.html

set -o nounset -o pipefail

# Command variables
# -----------------

# This command script can access the following variables
# declared by `rerun` or by the option parser function.

#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: 

# The `rerun_options_parse` function processes the command line
# arguments. Each accepted command line flag results in setting 
# one the corresponding option variables.

rerun_options_parse "$@"


# Command implementation
# ----------------------

# - - -

# Base directories 
USER_DIRS=(~/bin ~/ext ~/projects ~/projects/github ~/projects/eclipse/workspace)
SYSTEM_DIRS=(/etc/ansible/facts.d)


# CREATE SYSTEM DIRECTORIES 
function system_dirs {

    echo
    echo "Creating system directories..."
    echo "Requires root privileges:"
    echo

    for i in ${SYSTEM_DIRS[@]}; do
       sudo mkdir -p ${i}
    done

    echo
    echo "System directories created."
}


# CREATE USER DIRECTORIES 
function user_dirs {

    echo
    echo "Creating user directories..."
    echo

    for i in ${USER_DIRS[@]}; do
       mkdir -p ${i}
    done

    echo "User directories created."
    echo
}


# MAIN 
function main {

    user_dirs 
    system_dirs

}

main
# - - -

# Done. Exit with last command exit status.
exit $?

